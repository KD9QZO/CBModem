[
"\n" = CR+LF
]

Часть общения с компом:

При загрузке контроллера, он посылает в порт "s\n", и оператор или программа которая работает с портом по этому сигналу понимает, когда контроллер запустился и можно начинать обмен данными. Если сигнал пришел уже после инициализации, считаем что контроллер перезагружен в процессе работы, начинаем все с начала.

Чтобы начать работу, программа или оператор посылают в порт уже контроллеру "s\n" на которую рабочий контроллер должен ответить "o\n". Если ответа нет несколько секунд, считаем что контроллер сдох, пытаемся начать с начала.

Потом, будет некое подобие командной строки. Все символы он выводит оператору/программе через echo(если не отключить специальной командой). После получения верной команды, отправляет в порт подтверждение "o\n". Если команда неверная, отправляется "e\n".

Максимальная длина команд - 4 символа без учета переноса строки
Команды: 
"?\n" - список команд
"w\n" - режим ввода данных для последующей передачи в эфир
"a\n" - отправить пакет подтверждения в эфир
"re\n" - включить фоновое ожидание приема данных с эфира
"rd\n" - выключить ожидание приема
"ed\n" - выключить эхо, вывод вводимых символов обратно в терминал(для работы не с оператором, а с прогой)
"ee\n" - включить вывод в терминал
Может потом сделаю еще какие, по типу статуса или получения количества ошибок в последнем принятом пакете

Режим ввода данных: после отправки "w\n" и получения "o\n", можно вводить данные. Данные только текстовые, завершение ввода по "\n" или по достижению 80 символов. При получении символа стирания "\b", контроллер удаляет у себя из памяти последний введенный символ и уменьшает указатель на конец строки(или длину строки, пока не знаю как лучше сделать) на 1. 
После завершения ввода, контроллер отправляет "c\n", потом строку из своей памяти и "\n" для проверки. Для начала передачи в эфир, надо отправить "s\n". Если при вводе была допущена ошибка, надо отправить "[что угодно, кроме s]\n", и контроллер перейдет опять на ожидание команды(можно использовать, если случайно введена не та команда).
В начале передачи, контроллер отправляет "t\n", и по завершению "f\n". В процессе передачи контроллер игнорирует все, что ловит приемник, по понятным причинам.

Прием: Если на контроллер была подана команда на включение ожидания приема, помимо ожидания ввода с компа, он смотрит то, что ловит приемник. Если уровень из 0 стал 1, то запускается алгоритм приема. В момент приема данных, контроллер также допускает ввод с компа, но если в момент приема комп отправил команду на начало передачи в эфир, команда будет отложена до момента окончания приема. Когда контроллер выполняет алгоритм приема, он через пин CH340 отправляет на комп "DCD".
Если сигнал не случайная помеха, и верно декодирован, то он будет отправлен в комп. Если его тип подтверждение, то контроллер отправляет в комп "a\n". Если тип - данные, то сначала отправляется "r\n", потом принятая текстовая строка, потом "\n".

Часть работы с эфиром:

После ввода данных и проверки введенного, контроллер из строки у себя в памяти формирует пакет данных, который будет передан в эфир.
Структура: [преамбула] [синхро-слово] [тип пакета(данные/подтверждение(если подтверждение, то фрагмент данных в пакет не включается))] [длина пакета] [данные] [контрольная сумма]

Преамбула: 16 едениц

Синхро-слово: 32 определенных бита, по которым приемник сможет отличить сигнал от помехи.

Тип пакета: Особым образом закодированный бит, для повышения помехоустойчивости. Например, x-бит, определяющий тип(0-данные, 1-подтверждение). Тогда, в пакет будет включено 0bxxxxxxxx, и приемник по тому, больше в пакете нулей или единиц, сможет определить тип.

Длина: 8 битное целое число, также закодированное для повышения помехоустойчивости. Например, 0babcdefgh - длина. Тогда, в пакет будет включено 0baaaaaaaabbbbbbbbccccccccddddddddeeeeeeeeffffffffgggggggghhhhhhhh, и уже по полученным данным приемник сможет восстановить исходное число. Длина в байтах. Длина включает длину контрольной суммы

Данные: строка из памяти, к которой добавлен код Хэмминга для восстановления ошибок на приемнике.

Контрольная сумма: Контрольная сумма(16 бит), полученная для исходной строки до добавления кода коррекции ошибок, например CRC


Полученные после данной сборки данные теперь хранятся в памяти. Далее, контроллер подает питание на передающую часть, и последовательно передает каждый бит данных из памяти, при этом, применяя везде кодирование манчестера. Потом питание на передатчик отключается, и компу сообщается о успешной передаче.


Приемник работает аналогично, но в обратную сторону. 
Если включен режим приема, приемник постоянно мониторит состояние порта и кладет все в сдвиговый 32-битный регистр. Если полученные биты соответствуют синхрослову, прием продолжается, если нет, то возвращаемся в начало алгоритма.
Далее принимается и декодируется тип пакета. Если подтверждение, то в комп сообщается об этом и дальнейший прием не выполняется.
Далее, принимаются, декодируются из кода манчестера и кладутся в память длина, данные и контрольная сумма.
После окончания получения данных из эфира, контроллер начинает обрабатывать полученные данные.
Кодом Хэмминга восстанавливаются ошибки в принятых данных, и для полученной строки вычисляется контрольная сумма. Если она совпадает с той, что была принята, то принятые данные отправляются в комп.

